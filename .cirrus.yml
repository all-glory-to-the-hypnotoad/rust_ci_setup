#
# Notes
#
# Cirrus CI has a concurrency limit of 24 CPU cores for open source projects.
# This means we should not have more than 12 pipelines with more than 2 CPUs
# in each pipeline running parallel
#
# Documentation:
# - https://cirrus-ci.org/examples/
# - https://cirrus-ci.org/guide/writing-tasks/
#

#
# Templates
#

---

elk_common_cpu_and_memory_config_for_build_and_test_template: &ELK_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST
  cpu: 4
  memory: 4GB

elk_common_build_and_test_debug_template: &ELK_COMMON_BUILD_AND_TEST_DEBUG
  env:
    RUSTDOCFLAGS: -D warnings
  timeout_in: 20m
  build_script: cargo build --workspace --all --examples
  doc_script: cargo doc
  test_script: cargo test --workspace --all

elk_common_build_and_test_release_template: &ELK_COMMON_BUILD_AND_TEST_RELEASE
  env:
    RUSTDOCFLAGS: -D warnings
  timeout_in: 20m
  build_script: cargo build --release --workspace --all --examples
  doc_script: cargo doc --release
  test_script: cargo test --release --workspace --all

elk_windows_build_and_test_debug_template: &ELK_WINDOWS_BUILD_AND_TEST_DEBUG
  timeout_in: 20m
  build_script: cargo build --workspace --all --examples
  doc_script:
    - set RUSTDOCFLAGS=-D warnings # TODO elk-#8: move this to docker container
    - cargo doc
  test_script: cargo test --workspace --all

elk_windows_build_and_test_release_template: &ELK_WINDOWS_BUILD_AND_TEST_RELEASE
  env:
    RUSTDOCFLAGS: -D warnings
  timeout_in: 20m
  build_script: cargo build --release --workspace --all --examples
  doc_script: cargo doc --release
  test_script: cargo test --release --workspace --all

#
# Ubuntu x86
#

preflight_check_task:
  container:
    dockerfile: internal/docker/ubuntu-22.04
    <<: *ELK_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST
  # registry_cache:
  #   folder: $CARGO_HOME/registry
  #   fingerprint_script: cat Cargo.lock
  # target_cache:
  #   folder: target
  #   fingerprint_script:
  #     - rustc --version
  #     - cat Cargo.lock
  set_toolchain_script: rustup default beta
  <<: *ELK_COMMON_BUILD_AND_TEST_DEBUG
  # before_cache_script: rm -rf $CARGO_HOME/registry/index

ubuntu_nighlty_task:
  depends_on: preflight_check
  container:
    dockerfile: internal/docker/ubuntu-22.04
    <<: *ELK_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST
  set_toolchain_script: rustup default nightly
  <<: *ELK_COMMON_BUILD_AND_TEST_RELEASE


windows_server_10_x64_stable_debug_task:
  depends_on: preflight_check
  windows_container:
    image: cirrusci/windowsservercore:2019-2022.06.23
    <<: *ELK_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST
  install_dependencies_script:
    - choco install -y rust
  <<: *ELK_COMMON_BUILD_AND_TEST_DEBUG

windows_server_10_x64_stable_release_task:
  depends_on: windows_server_10_x64_stable_debug
  windows_container:
    image: cirrusci/windowsservercore:2019-2022.06.23
    <<: *ELK_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST
  install_dependencies_script:
    - choco install -y rust
  <<: *ELK_WINDOWS_BUILD_AND_TEST_RELEASE

